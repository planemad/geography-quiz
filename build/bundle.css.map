{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "Map.svelte",
    "Panel.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { onMount } from \"svelte\";\n  import mapbox from \"mapbox-gl\";\n\n  // Worldview for disputed areas. \n  // https://docs.mapbox.com/vector-tiles/reference/mapbox-boundaries-v3/#--polygon---worldview-text\n  export let worldview = \"US\";\n\n  // Initial map location\n  export let location = {\n    bounds: [\n      [-10.76, 49.864],\n      [1.863, 59.479],\n    ], \n  };\n  export let style;\n\n  export let map;\n  let container;\n  let options;\n\n  function resetView() {\n    map.fitBounds(location.bounds);\n  }\n\n  if (location.bounds) {\n    options = { bounds: location.bounds };\n  }\n\n  onMount(() => {\n    const link = document.createElement(\"link\");\n    link.rel = \"stylesheet\";\n    link.href = \"https://unpkg.com/mapbox-gl/dist/mapbox-gl.css\";\n\n    link.onload = () => {\n      mapbox.accessToken =\n        \"pk.eyJ1IjoicGxhbmVtYWQiLCJhIjoiemdYSVVLRSJ9.g3lbg_eN0kztmsfIPxa9MQ\";\n      map = new mapbox.Map({\n        container,\n        style: style,\n        interactive: true,\n        ...options,\n      });\n      // map.scrollZoom.disable();\n\n      map.on(\"load\", function () {\n        loadMapLayers();\n      });\n    };\n\n    document.head.appendChild(link);\n\n    return () => {\n      map.remove();\n      link.parentNode.removeChild(link);\n    };\n  });\n\n  function loadMapLayers() {\n\t  \n\t// Configure the worldview for the country boundaries tileset\n\t// https://docs.mapbox.com/vector-tiles/reference/mapbox-countries-v1/\n\n    const worldviewFilter = [\n      \"all\",\n      [\n        \"any\",\n        [\"in\", worldview, [\"get\", \"worldview\"]],\n        [\"==\", \"all\", [\"get\", \"worldview\"]]\n\t  ],\n\t  [\"!=\", \"true\", [\"get\", \"disputed\"]]\n    ]; \n\n    map.setLayoutProperty(\"country-label\", \"visibility\", \"none\");\n\n    // map.setPaintProperty(\"country-boundaries\", \"fill-color\", [\n    //   \"match\",\n    //   [\"get\", \"iso_3166_1\"],\n    //   \"GB\",\n    //   \"hsla(0, 0%, 94%, 0)\",\n    //   \"hsla(36, 0%, 100%, 0.89)\",\n    // ]);\n\n    map.setFilter(\"country-boundaries\", worldviewFilter);\n    map.setFilter(\"country-boundaries-outline\", worldviewFilter);\n\n    // Add new boundary to the map\n\n    map.addLayer({\n      id: \"capital-location\",\n      type: \"circle\",\n      source: {\n        type: \"geojson\",\n        data: null,\n      },\n      paint: {\n        \"circle-radius\": 3,\n        \"circle-color\": \"hsla(355, 100%, 50%, 0.5)\",\n        \"circle-stroke-color\": \"white\",\n        \"circle-stroke-width\": 1,\n      },\n      layout: {},\n    });\n  }\n</script>\n\n<style>\n  div {\n    width: 60%;\n    height: 100%;\n    position: fixed;\n    right: 0;\n  }\n  @media (max-width: 600px) {\n    div {\n      width: 100%;\n      height: 75%;\n      position: absolute;\n    }\n  }\n</style>\n\n<div id=\"map\" bind:this={container}>\n  {#if map}\n    <slot />\n  {/if}\n</div>\n",
    "<style>\n\tdiv {\n\t\tz-index: 2;\n\t\twidth: 40%;\n\t\theight: 100vh;\n\t\tposition: absolute;\n\t}\n\t@media (max-width: 600px) {\n\t\tdiv {\n\t\t\twidth: 100%;\n\t\t\ttop: 75%;\n\t\t}\n\t}\n\n</style>\n\n<div>\n\t<slot></slot>\n</div>"
  ],
  "names": [],
  "mappings": "AA2GE,GAAG,cAAC,CAAC,AACH,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,QAAQ,CAAE,KAAK,CACf,KAAK,CAAE,CAAC,AACV,CAAC,AACD,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,GAAG,cAAC,CAAC,AACH,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CACX,QAAQ,CAAE,QAAQ,AACpB,CAAC,AACH,CAAC;ACtHF,GAAG,eAAC,CAAC,AACJ,OAAO,CAAE,CAAC,CACV,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,KAAK,CACb,QAAQ,CAAE,QAAQ,AACnB,CAAC,AACD,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,GAAG,eAAC,CAAC,AACJ,KAAK,CAAE,IAAI,CACX,GAAG,CAAE,GAAG,AACT,CAAC,AACF,CAAC"
}